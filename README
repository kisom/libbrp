libbrp: a C package for computing bit-reverse permutations

To use this, call the `brp_tau` function, which takes an unsigned
integer, and returns an unsigned integer. Here is an example driver
program:

	#include <stdio.h>
	#include <stdlib.h>
	
	#include "brp.h"
	
	int
	main(int argc, char *argv[])
	{
	        unsigned int    n;
	        int             i;
	
	        for (i = 1; i < argc; i++) {
	                n = (unsigned int)atoi(argv[i]);
	                printf("tau(%u) = %u\n", n, brp_tau(n));
	        }
	}

Assuming this saved as `test.c`, it can be compiled with

	$(CC) test.c -L /path/to/libbrp -lbrp


NOTE:

This package uses the system's `unsigned int` type.


LICENSE:

Copyright (c) 2013 Kyle Isom <kyle@tyrfingr.is>

Permission to use, copy, modify, and distribute this software for any
purpose with or without fee is hereby granted, provided that the above 
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. 
